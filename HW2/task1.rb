array = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202,
574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]

p "узнать количество элементов в массиве"
p array.size
p "====================================="

p "перевернуть массив"
p array.reverse
p "====================================="

p "найти наибольшее число"
p array.max
p "====================================="

p "найти наименьшее число"
p array.min
p "====================================="

p "отсортировать от меньшего к большему"
p array.sort
p "====================================="

p "отсортировать от большего к меньшему"
p array.sort { |a, b| b <=> a }
p "====================================="

p "удалить все нечетные числа"
p array.delete_if { |elem| elem.odd? }
p "====================================="

p "оставить только те числа, которые без остатка делятся на 3"
p array.select { |elem| elem % 3 == 0 }
p "====================================="

p "удалить из массива числа, которые повторяются (то есть, нужно вывести массив, в котором нет повторов)"
p array.uniq
p "====================================="

p "разделить каждый элемент на 10, в результате элементы не должны быть округлены до целого"
p array.map { |elem| elem.to_f / 10  }
p "====================================="

p "найти элементы, которые находятся перед минимальным числом в массиве"
p array[0...array.index(array.min)]
p "====================================="

p "необходимо найти три наименьших элемента"
p array.sort.first(3)
p "====================================="

p "поменять местами минимальный и максимальный элементы массива"
i_min, i_max = array.index(array.min), array.index(array.max)
array[i_min], array[i_max] = array.max, array.min
p array
p "====================================="

p "получить новый массив, который бы содержал в себе те буквы английского алфавита, порядковый номер которых есть в нашем массиве"
alphabet_array = ("a".."z").to_a
new_array = []
alphabet_array.each.with_index{ |elem, i| new_array << elem if array.include?(i) }
p new_array
p "====================================="