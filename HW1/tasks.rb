p "Дан целочисленный массив. Найти все четные элементы."
p "[12, 24, 38, 442, 5, 33, 91].find_all{ |elem| elem.even? }"
array = [12, 24, 38, 442, 5, 33, 91]
p array.find_all{ |elem| elem.even? }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти все нечетные элементы."
p "[12, 24, 38, 442, 5, 33, 91].find_all{ |elem| elem.odd? }"
array = [12, 24, 38, 442, 5, 33, 91]
p array.find_all{ |elem| elem.odd? }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти максимальный четный элемент"
p "[12, 24, 38, 442, 5].find_all{ |elem| elem.even? }.max"
array = [12, 24, 38, 442, 5]
p array.find_all{ |elem| elem.even? }.max
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти максимальный нечетный элемент"
p "[12, 24, 38, 442, 5, 33, 91].find_all{ |elem| elem.odd? }.max"
array = [12, 24, 38, 442, 5, 33, 91]
p array.find_all{ |elem| elem.odd? }.max
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти минимальный четный элемент"
p "[12, 24, 38, 442, 5].find_all{ |elem| elem.even? }.min"
array = [12, 24, 38, 442, 5]
p array.find_all{ |elem| elem.even? }.min
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти минимальный нечетный элемент"
p "[12, 24, 38, 442, 5, 33, 91].find_all{ |elem| elem.odd? }.min"
array = [12, 24, 38, 442, 5, 33, 91]
p array.find_all{ |elem| elem.odd? }.min
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти максимальный отрицательный элемент."
p "[12, -24, 38, 442, 5, -33, 91].find_all{ |elem| elem < 0 }.max"
array = [12, -24, 38, 442, 5, -33, 91]
p array.find_all{ |elem| elem < 0 }.max
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти минимальный положительный элемент."
p "[12, -24, 38, 442, 5, -33, 91].find_all{ |elem| elem > 0 }.min"
array = [12, -24, 38, 442, 5, -33, 91]
p array.find_all{ |elem| elem > 0 }.min
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество четных элементов."
p "[12, 24, 38, 442, 5, 33, 91].find_all{ |elem| elem.even? }.size"
array = [12, 24, 38, 442, 5, 33, 91]
p array.find_all{ |elem| elem.even? }.size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество нечетных элементов."
p "[12, 24, 38, 442, 5, 33, 91].find_all{ |elem| elem.odd }.size"
array = [12, 24, 38, 442, 5, 33, 91]
p array.find_all{ |elem| elem.odd? }.size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Упорядочить его по возрастанию."
p "[12, 24, 38, 442, 5, 33, 91].sort"
array = [12, 24, 38, 442, 5, 33, 91]
p array.sort
p "---------------------------------------------------------"

p "Дан целочисленный массив. Упорядочить его по убыванию."
p "[12, 24, 38, 442, 5, 33, 91].sort { |a, b| b <=> a }"
array = [12, 24, 38, 442, 5, 33, 91]
p array.sort { |a, b| b <=> a }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти индекс минимального элемента."
p "[12, 24, 38, 442, 5, 33, 91].index([12, 24, 38, 442, 5, 33, 91].min)"
array = [12, 24, 38, 442, 5, 33, 91]
p array.index(array.min)
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти индекс максимального элемента."
p "[12, 24, 38, 442, 5, 33, 91].index([12, 24, 38, 442, 5, 33, 91].max)"
array = [12, 24, 38, 442, 5, 33, 91]
p array.index(array.max)
p "---------------------------------------------------------"

p "Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными."
p "[12, 24, 38, 442, 5, 33, 91].select.with_index { |_, index| index.even? } + [12, 24, 38, 442, 5, 33, 91].select.with_index { |_, index| index.odd? }"
array=[12, 24, 38, 442, 5, 33, 91]
p array.select.with_index { |_, index| index.even? } + array.select.with_index { |_, index| index.odd? }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными."
p "[12, 24, 38, 442, 5, 33, 91].select.with_index { |_, index| index.odd? } + [12, 24, 38, 442, 5, 33, 91].select.with_index { |_, index| index.even? }"
array=[12, 24, 38, 442, 5, 33, 91]
p array.select.with_index { |_, index| index.odd? } + array.select.with_index { |_, index| index.even? }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ]."
p "array.index(array.select { |elem| array[0] < elem && elem < array[-1] }.first) || []"
p "array=[12, 24, 38, 442, 5, 33, 91]"
array=[12, 24, 38, 442, 5, 33, 91]
p array.index(array.select { |elem| array[0] < elem && elem < array[-1] }.first) || []
p "---------------------------------------------------------"

p "Дан целочисленный массив. Вывести номер последнего из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ]."
p "array.index(array.select { |elem| array[0] < elem && elem < array[-1] }.last) || []"
p "array=[12, 24, 38, 442, 5, 33, 91]"
array=[12, 24, 38, 442, 5, 33, 91]
p array.index(array.select { |elem| array[0] < elem && elem < array[-1] }.last) || []
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального."
p "array[array.index(array.max)+1..-1].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array[array.index(array.max)+1..-1].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального."
p "array[array.rindex(array.max)+1..-1].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array[array.rindex(array.max)+1..-1].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального."
p "array[array.index(array.min)+1..-1].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array[array.index(array.min)+1..-1].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального."
p "array[array.rindex(array.min)+1..-1].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array[array.rindex(array.min)+1..-1].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию."
p "array.rotate(1)"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.rotate(1)
p "---------------------------------------------------------"

p "Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию."
p "array.rotate(-1)"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.rotate(-1)
p "---------------------------------------------------------"

p "Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале."
p "(array & interval.to_a).min"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
interval = (25..40)
p (array & interval.to_a).min
p "---------------------------------------------------------"

p "Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале."
p "(array & interval.to_a).max"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
interval = (25..40)
p (array & interval.to_a).max
p "---------------------------------------------------------"

p "Дан целочисленный массив. Заменить все положительные элементы на значение минимального."
p "array.map!{|elem| elem > 0 ? array.min : elem }"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.map!{|elem| elem > 0 ? array.min : elem }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Заменить все положительные элементы на значение максимального."
p "array.map!{|elem| elem > 0 ? array.max : elem }"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.map!{|elem| elem > 0 ? array.max : elem }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального."
p "array.map!{|elem| elem < 0 ? array.min : elem }"
p "array = [12, -24, 5, -38, 442, 5, 33, -442, 91]"
array = [12, -24, 5, -38, 442, 5, 33, -442, 91]
p array.map!{|elem| elem < 0 ? array.min : elem }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального."
p "array.map!{|elem| elem < 0 ? array.max : elem }"
p "array = [12, -24, 5, -38, 442, 5, 33, -442, 91]"
array = [12, -24, 5, -38, 442, 5, 33, -442, 91]
p array.map!{|elem| elem < 0 ? array.max : elem }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти индекс первого минимального элемента."
p "array.index(array.min)"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.index(array.min)
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти индекс первого максимального элемента."
p "array.index(array.max)"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.index(array.max)
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти индекс последнего минимального элемента."
p "array.rindex(array.min)"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.rindex(array.min)
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти индекс последнего максимального элемента."
p "array.rindex(array.max)"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.rindex(array.max)
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным."
p "array.index(array.min) array[0...a].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
a = array.index(array.min)
p array[0...a].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным."
p "array.index(array.max) array[0...a].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
a = array.index(array.max)
p array[0...a].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным."
p "array.rindex(array.max) array[0...a].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
a = array.rindex(array.max)
p array[0...a].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным."
p "array.rindex(array.min) array[0...a].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
a = array.rindex(array.min)
p array[0...a].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти два наибольших элемента."
p "array.max array.delete(array.max) array.max"
p "array = [12, 24, 38, 5, 33, 442, 91]"
array = [12, 24, 38, 5, 33, 442, 91]
p array.max
array.delete(array.max)
p array.max
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти два найменших элемента."
p "array.min array.delete(array.min) array.min"
p "array = [12, 24, 38, 5, 33, 442, 91]"
array = [12, 24, 38, 5, 33, 442, 91]
p array.min
array.delete(array.min)
p array.min
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, между первым и последним минимальным."
p "a = array.index(array.min) b = array.rindex(array.min) p array[a+1...b].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
a = array.index(array.min)
b = array.rindex(array.min)
p array[a+1...b].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество элементов, между первым и последним максимальным."
p "a = array.index(array.max) b = array.rindex(array.max) p array[a+1...b].size"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
a = array.index(array.max)
b = array.rindex(array.max)
p array[a+1...b].size
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество минимальных элементов."
p "array.count{ |i| i == array.min }"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.count{ |i| i == array.min }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Найти количество максимальных элементов."
p "array.count{ |i| i == array.max }"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.count{ |i| i == array.max }
p "---------------------------------------------------------"

p "Дан целочисленный массив. Вывести вначале все его четные элементы, а затем - нечетные."
p "array.partition{ |elem| elem.even? }.flatten"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.partition{ |elem| elem.even? }.flatten
p "---------------------------------------------------------"

p "Дан целочисленный массив. Вывести вначале все его нечетные элементы, а затем - четные."
p "array.partition{ |elem| elem.odd? }.flatten"
p "array = [12, 24, 5, 38, 442, 5, 33, 442, 91]"
array = [12, 24, 5, 38, 442, 5, 33, 442, 91]
p array.partition{ |elem| elem.odd? }.flatten
p "---------------------------------------------------------"

p "Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент."
p "array.map{|elem| elem > 0 ? [f, elem] : elem}.flatten"
p "array = [12, -24, 5, 38, -442, 5, 33, -442, 91]"
array = [12, -24, 5, 38, -442, 5, 33, -442, 91]
f = array[0]
p array.map{|elem| elem > 0 ? [f, elem] : elem}.flatten
p "---------------------------------------------------------"

p "Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент."
p "array.map{|elem| elem < 0 ? [f, elem] : elem}.flatten"
p "array = [12, -24, 5, 38, -442, 5, 33, -442, 91]"
array = [12, -24, 5, 38, -442, 5, 33, -442, 91]
f = array[0]
p array.map{|elem| elem < 0 ? [f, elem] : elem}.flatten
p "---------------------------------------------------------"

p "Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент."
p "array.map{|elem| elem > 0 ? [f, elem] : elem}.flatten"
p "array = [12, -24, 5, 38, -442, 5, 33, -442, 91]"
array = [12, -24, 5, 38, -442, 5, 33, -442, 91]
f = array[0]
p array.map{|elem| elem > 0 ? [elem, f] : elem}.flatten
p "---------------------------------------------------------"

p "Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент."
p "array.map{|elem| elem < 0 ? [f, elem] : elem}.flatten"
p "array = [12, -24, 5, 38, -442, 5, 33, -442, 91]"
array = [12, -24, 5, 38, -442, 5, 33, -442, 91]
f = array[0]
p array.map{|elem| elem < 0 ? [elem, f] : elem}.flatten
p "---------------------------------------------------------"
